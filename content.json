{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"Popofang","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"分油问题","slug":"Oil","date":"2017-10-24T02:02:33.000Z","updated":"2017-10-24T08:46:57.403Z","comments":true,"path":"2017/10/24/Oil/","link":"","permalink":"http://yoursite.com/2017/10/24/Oil/","excerpt":"","text":"三个油瓶分油问题 问题描述两个小孩去打油，一个人带了一个一斤的空瓶，另一个带了一个七两一个三两的空瓶。原计划各打一斤油，可是由于所带的钱不够，只好两人合打了一斤油，可是又没有其它工具，试仅用三个瓶子（一斤、七两、三两）精确地分成两个半斤油来。 解决思路广度搜索，设三个瓶子的初始状态为(10,0,0)，目标状态为(5,5,0)；向量(A,B,C)分别表示一斤、七两、三两空瓶中的油量已知的前提条件有： A+B+C=10 7&lt;=A+B&lt;=10 3&lt;=A+C&lt;=10 0&lt;=B+C&lt;=10 智能算子，用以变化的规则： 规则号 规则 解释 1 （A，B，C）and A&gt;0 and B(A+B-7,7,C) A瓶倒B瓶 2 （A，B，C）and A&gt;0 and C(A+C-3,B,3) A瓶倒C瓶 3 （A，B，C）and B&gt;0-&gt;(A+B,0,C) B瓶倒A瓶 4 （A，B，C）and B&gt;0 and C=3-&gt;(A,B+C-3,3) B瓶倒C瓶，C瓶装满 5 （A，B，C）and B&gt;0 and B+C(A,0,B+C) B瓶倒C瓶，C瓶装不满 6 （A，B，C）and C&gt;0 -&gt;(A+C,B,0) C瓶倒A瓶 7 （A，B，C）and C&gt;0 and B=7-&gt;(A,7,B+C-7) C瓶倒B瓶，B瓶装满 8 （A，B，C）and C&gt;0 and B+C(A,B+C,0) C瓶倒B瓶，B瓶装不满 代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#-*- coding:utf-8 -*-init_state = [10, 0, 0, 0] #定义初始状态;依次表示一斤、七两、三两空瓶中的油量以及父状态指向taget=[5,5,0,0] #定义目标状态def display(n): #递归打印路径 if(n[3]!=0): display(n[3]) print (\"(%d,%d,%d)\"%(n[0],n[1],n[2]))def compare(n,t): #比较状态n,t if(n[0]==t[0]and n[1]==t[1] and n[2]==t[2]): return 1 return 0def isExist(n,v): #判断状态n是否在已访问列表中 for item in v: if(compare(n,item)): return 1 return 0def breadthSearch(v,uv): #广度搜索 if(len(uv)==0): return 0 n=uv[0] if(compare(n,taget)): #找到目标状态递归结束 return 1 n=uv.pop(0) v.append(n) generate(v,uv) return breadthSearch(v,uv)def generate(v,uv): #根据智能算子确定新状态 n=v[len(v)-1] a=n[0] #方便敲代码 b=n[1] c=n[2] if(a&gt;0): if(b&lt;7): n0=[a+b-7,7,c,n] if (not isExist(n0, v)): # 将不重复的状态加入已访问列表 uv.append(n0) if(c&lt;3): n0=[a+c-3,b,3,n] if (not isExist(n0, v)): uv.append(n0) if(b&gt;0): n0=[a+b,0,c,n] if (not isExist(n0, v)): uv.append(n0) if(c&lt;3): if(b+c&gt;=3): n0 = [a,b+c-3,3,n] if (not isExist(n0, v)): uv.append(n0) if(b+c&lt;3): n0 = [a,0,b+c,n] if (not isExist(n0, v)): uv.append(n0) if(c&gt;0): n0=[a+c,b,0,n] if (not isExist(n0, v)): uv.append(n0) if(b&lt;7): if(b+c&lt;=7): n0=[a,a+b,0,n] if (not isExist(n0, v)): uv.append(n0) if (b + c &gt; 7): n0 = [a, 7, b+c-7,n] if (not isExist(n0, v)): uv.append(n0)if __name__=='__main__': v=[] #定义已访问列表 uv=[init_state] #定义未已访问列表 if(not breadthSearch(v,uv)): exit(1) x=uv[0] display(x)","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-05-25T16:56:25.243Z","updated":"2017-05-25T16:56:25.243Z","comments":true,"path":"2017/05/26/hello-world/","link":"","permalink":"http://yoursite.com/2017/05/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}